name: CI/CD

on:
  push:
    branches:
      - 'master'
      - 'dev'

env:
  NODE_VERSION: '14'

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest

    outputs:
      changed: ${{ steps.check.outputs.changed }}
      version: ${{ steps.check.outputs.version }}
      type: ${{ steps.check.outputs.type }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build

      - name: Validate
        run: npm run validate

      - name: Version Check
        id: check
        uses: EndBug/version-check@v2.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Install
        run: npm ci

      - name: Lint
        run: npm run lint

  release:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [validate]

    if: needs.validate.outputs.changed == 'true'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v2
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build
        env:
          VITE_TITLE: 'Prod Title'
          VITE_API_ADDR: '${{ secrets.API_URL }}'

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './dist'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          netlify-config-path: ./netlify.toml
          github-deployment-environment: 'Production'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_API_ID }}

      - name: 'Tag new ${{ needs.validate.outputs.type }} version: ${{ needs.validate.outputs.version }}'
        uses: tvdias/github-tagger@v0.0.2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          tag: 'v${{ needs.validate.outputs.version }}'
